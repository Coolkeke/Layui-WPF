<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Lay="clr-namespace:LayUI.Wpf.Controls">
    <Style x:Key="LayCheckBoxStyle" TargetType="{x:Type Lay:LayCheckBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="#D2D2D2" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Height" Value="25" />
        <Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadiusBase}" />
        <Style.Triggers>
            <Trigger Property="Type" Value="Primary">
                <Setter Property="Background" Value="White" />
                <Setter Property="HoverBorderBrush" Value="{DynamicResource CyanBlue}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Lay:LayCheckBox}">
                            <Grid
                                x:Name="templateRoot"
                                Background="Transparent"
                                SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Grid Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ActualHeight}" Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ActualHeight}">
                                    <Viewbox>
                                        <Grid>
                                            <Border
                                                x:Name="checkBoxBorder"
                                                Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ActualHeight}"
                                                Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ActualHeight}"
                                                Padding="5"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Background="White"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                CornerRadius="{TemplateBinding CornerRadius}">
                                                <Path
                                                    x:Name="textBlock"
                                                    Data="M332.972089 890.88a56.888889 56.888889 0 0 0 85.333333 0.170667l591.388445-682.666667a56.888889 56.888889 0 0 0-85.162667-75.434667l-591.388444 682.666667 85.333333 0.199111L99.642311 465.208889a56.888889 56.888889 0 1 0-85.504 75.064889l318.862222 350.577778z"
                                                    Fill="White"
                                                    Opacity="0"
                                                    Stretch="Fill" />
                                            </Border>
                                        </Grid>
                                    </Viewbox>
                                </Grid>

                                <Border
                                    x:Name="content"
                                    Grid.Column="1"
                                    Padding="5,0,0,0">
                                    <ContentPresenter
                                        x:Name="contentPresenter"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Focusable="False"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <!--  内容为空时触发的效果  -->
                                <Trigger Property="Content" Value="">
                                    <Setter TargetName="content" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter TargetName="content" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="HasContent" Value="true">
                                    <!-- <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />-->
                                </Trigger>
                                <!--  鼠标移上去触发的效果  -->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=HoverBorderBrush}" />
                                </Trigger>
                                <!--  鼠标点击后的效果  -->
                                <Trigger Property="IsPressed" Value="true" />
                                <!--  被选中后的效果  -->
                                <Trigger Property="IsChecked" Value="true" />
                                <!--  未选择时的效果  -->
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter TargetName="checkBoxBorder" Property="Padding" Value="1" />
                                    <Setter TargetName="textBlock" Property="Data" Value="M0,2 C0,0.8954305 0.8954305,0 2,0 L28,0 C29.104569,0 30,0.8954305 30,2 L30,28 C30,29.104569 29.104569,30 28,30 L2,30 C0.8954305,30 0,29.104569 0,28 z" />
                                    <Setter TargetName="textBlock" Property="Fill" Value="{DynamicResource CyanBlue}" />
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="textBlock"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    To="1"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="textBlock"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <!--  复选框被禁止时的效果  -->
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#eee" />
                                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#c2c2c2" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="true" />
                                        <Condition Property="IsChecked" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="textBlock"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    To="1"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="textBlock"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                    <Setter TargetName="checkBoxBorder" Property="Padding" Value="3" />
                                    <Setter TargetName="textBlock" Property="Margin" Value="0,2" />
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CyanBlue}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="IsChecked" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#eee" />
                                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="#c2c2c2" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Type" Value="Default">
                <Setter Property="MinWidth" Value="78" />
                <Setter Property="Height" Value="30" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Padding" Value="10,3" />
                <Setter Property="Background" Value="{DynamicResource Gray}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Gray}" />
                <Setter Property="HoverBorderBrush" Value="{DynamicResource CyanBlue}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Lay:LayCheckBox}">
                            <Border
                                x:Name="body"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource ControlCornerRadiusBase}">
                                <Grid IsHitTestVisible="False">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Border
                                        x:Name="checkBoxBorder"
                                        Margin="-1"
                                        Padding="{TemplateBinding Padding}"
                                        Background="Transparent"
                                        CornerRadius="1 0 0 1">
                                        <ContentPresenter
                                            x:Name="contentPresenter"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <Viewbox Grid.Column="1">
                                        <Border
                                            Width="{Binding ElementName=checkBoxBorder, Path=ActualHeight}"
                                            Height="{Binding ElementName=checkBoxBorder, Path=ActualHeight}"
                                            Background="White">
                                            <Viewbox Margin="5">
                                                <Path
                                                    x:Name="fontIcon"
                                                    Data="M332.972089 890.88a56.888889 56.888889 0 0 0 85.333333 0.170667l591.388445-682.666667a56.888889 56.888889 0 0 0-85.162667-75.434667l-591.388444 682.666667 85.333333 0.199111L99.642311 465.208889a56.888889 56.888889 0 1 0-85.504 75.064889l318.862222 350.577778z"
                                                    Fill="{DynamicResource Gray}"
                                                    Opacity="0"
                                                    Stretch="Fill" />
                                            </Viewbox>
                                        </Border>
                                    </Viewbox>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Content" Value="">
                                    <Setter TargetName="contentPresenter" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <!--  鼠标移上去触发的效果  -->
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="fontIcon"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    To="1"
                                                    Duration="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="fontIcon"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    Duration="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <!--  被选中后的效果  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsChecked" Value="true" />
                                        <Condition Property="IsEnabled" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="fontIcon"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    To="1"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    Storyboard.TargetName="fontIcon"
                                                    Storyboard.TargetProperty="(UIElement.Opacity)"
                                                    Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource CyanBlue}" />
                                    <Setter TargetName="fontIcon" Property="Fill" Value="{DynamicResource CyanBlue}" />
                                </MultiTrigger>
                                <!--  设置空间禁止状态样式  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="IsChecked" Value="true" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="body" Property="Background" Value="#FFEAEAEA" />
                                    <Setter TargetName="body" Property="BorderBrush" Value="#FFEAEAEA" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FFEAEAEA" />
                                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White" />
                                </MultiTrigger>
                                <!--  设置空间禁止状态样式  -->
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="false" />
                                        <Condition Property="IsChecked" Value="false" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="Transparent" />
                                    <Setter TargetName="body" Property="Background" Value="#FFEAEAEA" />
                                    <Setter TargetName="body" Property="BorderBrush" Value="#FFEAEAEA" />
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="#FFEAEAEA" />
                                    <Setter TargetName="contentPresenter" Property="TextBlock.Foreground" Value="White" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource LayCheckBoxStyle}" TargetType="{x:Type Lay:LayCheckBox}" />
</ResourceDictionary>